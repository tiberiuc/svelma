{
  "version": 3,
  "file": "chunk.de8c22d6.css",
  "sources": [
    "../../../../../../src/components/Code.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Clipboard from 'clipboard'\n  import hljs from 'highlight.js/lib/highlight'\n  import { beforeUpdate, tick, onMount, onDestroy } from 'svelte'\n\n  export let lang = 'js'\n  export let code = ''\n  export let showCopy = true\n  let _code = ''\n  let button\n  let codeElm\n  let clip\n  let show = false\n  let compiled\n  let observer\n\n  $: {\n    _code = code || (codeElm && codeElm.innerHTML) || _code\n    updateCode(code)\n  }\n\n  function updateCode(newCode) {\n    if (!newCode) return\n    code = newCode.trim()\n    compiled = hljs.highlightAuto(code, [lang]).value\n  }\n\n  onMount(async () => {\n    if (codeElm.innerHTML) code = codeElm.innerHTML\n\n    if (button) {\n      clip = new Clipboard(button, {\n        text: trigger => code,\n      })\n    }\n\n    const MutationObserver = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver\n    observer = new MutationObserver(() => {\n      if (codeElm && codeElm.innerHTML) updateCode(codeElm.innerHTML)\n    })\n    observer.observe(codeElm, {\n      subtree: true,\n      childList: true,\n      characterData: true,\n    })\n\n    await tick()\n\n    show = true\n  })\n\n  onDestroy(() => {\n    if (clip) clip.destroy()\n    if (observer) observer.disconnect()\n  })\n</script>\n\n<style>\n  .codeview {\n    padding: 0;\n  }\n\n  .codeview:not(:last-child) {\n    margin-bottom: 1.5rem;\n  }\n\n  figure.highlight {\n    position: relative;\n  }\n\n  .button-container {\n    position: absolute;\n    right: 0;\n  }\n\n  /* code {\n    padding: 1.25rem 1.5rem;\n  } */\n\n  pre.hidden {\n    visibility: hidden;\n    height: 0px;\n    padding: 0px;\n  }\n\n  pre.show {\n    /* display: block; */\n    visibility: visible;\n  }\n</style>\n\n<div class=\"codeview\">\n  <figure class=\"highlight is-expanded\">\n    {#if showCopy}\n      <div class=\"button-container\">\n        <button class=\"button is-text is-small copy-code\" bind:this={button}>Copy</button>\n      </div>\n    {/if}\n    <pre class=\"hidden\">\n      <code class={lang} bind:this={codeElm}>\n        <slot />\n      </code>\n    </pre>\n    <pre class:hidden={!show} class:show>\n      <code>\n        {@html compiled}\n      </code>\n    </pre>\n  </figure>\n</div>\n"
  ],
  "names": [],
  "mappings": "AA0DE,SAAS,cAAC,CAAC,AACT,OAAO,CAAE,CAAC,AACZ,CAAC,AAED,uBAAS,KAAK,WAAW,CAAC,AAAC,CAAC,AAC1B,aAAa,CAAE,MAAM,AACvB,CAAC,AAED,MAAM,UAAU,cAAC,CAAC,AAChB,QAAQ,CAAE,QAAQ,AACpB,CAAC,AAED,iBAAiB,cAAC,CAAC,AACjB,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,CAAC,AACV,CAAC,AAMD,GAAG,OAAO,cAAC,CAAC,AACV,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,GAAG,CACX,OAAO,CAAE,GAAG,AACd,CAAC,AAED,GAAG,KAAK,cAAC,CAAC,AAER,UAAU,CAAE,OAAO,AACrB,CAAC"
}